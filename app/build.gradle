apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file('keystore/keystore.properties')

ext {
    apiUrlKey = "API_URL"
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "pl.mdanilowski.spotted"
        minSdkVersion 21
        targetSdkVersion 29

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                def properties = new Properties()
                properties.load(new FileInputStream(keystorePropertiesFile))
                storeFile = file(properties['StoreFile'])
                storePassword = properties['StorePassword']
                keyAlias = properties['KeyAlias']
                keyPassword = properties['KeyPassword']
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }

    flavorDimensions "api"

    productFlavors {
        prod {
            dimension "api"
            // TODO change to prod when it will be available
            buildConfigField "String", "$apiUrlKey", "\"http://192.168.0.101:8080/\""
        }
        dev {
            dimension "api"
            applicationIdSuffix ".dev"
            buildConfigField "String", "$apiUrlKey", "\"http://192.168.0.101:8080/\""
        }
    }

    dataBinding {
        enabled = true
    }
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}
ext {
    support_version = '28.0.0'
    dagger_version = '2.23.2'
    lifecycle_version = "2.2.0"
    timber_version = '4.7.1'
    crashlytics_version = '2.9.4'
    glide_version = '4.9.0'
    rx_version = '2.1.1'
    retrofit_version = '2.4.0'
    ok_http_version = '3.10.0'
    leak_cannary_version = '1.6.3'
    tatarka_version = '3.1.1'
    mockito_version = '2.18.0'
    architecture_components_version = '2.2.0'
    moshi_version = '1.9.2'
    moshi_converter_version = '2.3.0'
    room_version = '2.2.5'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // KOIN - DI
    implementation "org.koin:koin-android:2.0.1"
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"

    // ARCHITECTURE COMPONENTS
    implementation "androidx.lifecycle:lifecycle-extensions:$architecture_components_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$architecture_components_version"

    // RX
    api "io.reactivex.rxjava2:rxandroid:$rx_version"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'

    // TIMBER
    implementation "com.jakewharton.timber:timber:$timber_version"

    // NETWORKING - RETROFIT, OKHTTP
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // MOSHI
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // IMAGE LOADING - GLIDE
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide_version}@aar"

    // LEAK CANNARY
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_cannary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_cannary_version"

    // ROOM DATABASE
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

